import{c as s}from"../chunk.KEGSSE5H.mjs";import"../chunk.E4LFTDIS.mjs";var o=(t,e)=>{new MutationObserver(r=>{r.forEach(i=>{let a=i.type==="attributes",c=!i.target.classList.contains("typing");a&&c&&e()})}).observe(t,{attributes:!0,childList:!0,subtree:!0})},l=t=>t.forEach(e=>e.currentNode.textContent=""),d=async(t,e)=>{if(e.cascade)l(t);else{let{getLongestTextElement:n}=await import("../helpers/getLongestTextElement.mjs"),r=n(t);o(r,()=>e.dispatch("done"))}for(let n of t)e.cascade?await s(n,e):s(n,e);e.cascade&&e.dispatch("done")};export{d as mode};
