import"svelte/internal";import{s as t}from"./Typewriter.mjs";let e=[];const n=t=>{const n=t.textContent.split("").map((n,o)=>{const r=e.some(({currentNode:e,matchingLetters:n})=>e===t&&n.includes(o))||" "===n,a=String.fromCharCode(65+Math.round(50*Math.random()));return r?n:a}).join("");t.textContent=n},o=(t,n)=>{const o=t.textContent;n.forEach((n,r)=>{!e.some(({matchingLetters:e,currentNode:n})=>n===t&&e.includes(r))&&n===o[r]&&e.forEach(({currentNode:e,matchingLetters:n})=>e===t&&n.push(r))})};export default async({elements:r},a)=>{e=[...r.map(({currentNode:t})=>({currentNode:t,matchingLetters:[]}))],r.forEach(async({currentNode:r,text:c})=>{const s="number"==typeof a.scramble?a.scramble:3e3,i=(new Date).getTime();for(console.log(e);;){n(r),o(r,c),await t(a.interval);const e=r.textContent!=c.join(""),m=(new Date).getTime()-i<s;if(!e||!m)break}a.dispatch("done"),r.textContent=c.join("")})};
