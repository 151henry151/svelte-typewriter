import{cleanChildNodes as e}from"../helpers/cleanChildNodes.js";import{createElement as t}from"../helpers/createElement.js";import{rng as r}from"../helpers/rng.js";import{unwriteEffect as o}from"../helpers/unwriteEffect.js";import{writeEffect as n}from"../helpers/writeEffect.js";let s=[];const a=e=>{for(;;){const t=r(0,e.length),o="number"==typeof s&&t!==s;if(Array.isArray(s)&&!s.includes(t)||o){o&&(s=[]),s.push(t);return e[t]}s.length===e.length&&(s=s.pop())}},l=async(r,{currentNode:s,text:a},l)=>{e(r);const i=s.tagName.toLowerCase(),p=t(a,i);[...s.attributes].forEach((({name:e,value:t})=>p.setAttribute(e,t))),r.appendChild(p),await n({currentNode:p,text:a},l);const f=a.replaceAll("&","&amp;");p.innerHTML===f&&await o(p,l),e(r)},i=async({node:e,elements:t},r)=>{for(;;)if(r.loop)for(const o of t)await l(e,o,r);else if(r.loopRandom){const o=a(t);await l(e,o,r)}};export{i as mode};
