import{sleep as e}from"../helpers/sleep.js";let n=[];const t=e=>n.find((n=>n.currentNode===e)),r=e=>{const n=(e=>{const n=/(<([^>]+)>)/g,t=[];let r=[];for(;null!==(r=n.exec(e.innerHTML));){const e=r.index,s=n.lastIndex;t.push([e,s-1])}return t})(e),r=e.innerHTML.split("").map(((r,s)=>{const{matchingLetters:o}=t(e),a=o.includes(s)||r.match(/\s+/g)||((e,n)=>n.some((([n,t])=>{var r;return(r=e)>=n&&r<=t})))(s,n),c=String.fromCharCode(65+Math.round(50*Math.random()));return a?r:c})).join("");e.innerHTML=r},s=(e,n)=>{const r=e.innerHTML;for(let s=0;s<n.length;s++){const o=n[s],{matchingLetters:a}=t(e);!a.includes(s)&&o===r[s]&&a.push(s)}};export default async({elements:t},o)=>{n=[...t.map((({currentNode:e})=>({currentNode:e,matchingLetters:[]})))],await new Promise((n=>{t.forEach((async({currentNode:t,text:a})=>{const c="number"==typeof o.scramble?o.scramble:3e3,i=(new Date).getTime();for(;;){r(t),s(t,a),await e(o.interval);const m=t.innerHTML!=a,l=(new Date).getTime()-i<c;if(!m||!l){n();break}}t.innerHTML=a}))})),o.dispatch("done")};
