import{s as t}from"./typingInterval.mjs";const e=async({currentNode:e,text:n},s)=>{e.classList.add("typing");for(let r=0;r<=n.length;r++)"<"===n[r]&&(r=n.indexOf(">",r)),e.innerHTML=n.slice(0,r),await t(s.interval);null!==e.nextSibling&&1==e.classList.length?e.removeAttribute("class"):e.classList.remove("typing")};export default async({elements:t},n)=>{for(const s of t)e(s,n);const{currentNode:s}=t.reduce(((t,e)=>{const n=t.text.length;return e.text.length>n?t=e:t}));new MutationObserver((t=>{t.forEach((t=>{const e=!t.target.classList.contains("typing");"attributes"===t.type&&e&&n.dispatch("done")}))})).observe(s,{attributes:!0,childList:!0,subtree:!0})};
